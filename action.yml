name: moodle-test-action
description: 'Run PHPUnit tests for Moodle'

inputs:
  plugin:
    description: 'Plugin name (component name)'
    required: true
  plugin-path:
    description: 'Plugin path'
    required: true
  php:
    description: 'PHP version'
    required: true
  moodle:
    description: 'Moodle version (branch, tag or commit)'
    required: true
  os:
    description: 'Operating system'
    required: true
  org:
    description: 'Organization'
    required: false
    default: 'praxisdigital'
  dependencies:
    description: >
      Plugin dependencies.
      Format: user/repo:path@ref
      Example: |
        praxisdigital/assignsubmission_pxaiwriter:mod/assign/submission/pxaiwriter@master
        praxisdigital/mod_smartlink:mod/smartlink@MOODLE_42_STABLE
    required: false
    default: ''
  dbtype:
    description: 'Database type (mysqli, pgsql, sqlsrv)'
    required: false
    default: 'mysqli'
  experimental:
    description: 'Is experimental run'
    required: false
    default: 'false'
  PRIVATE_REPO_TOKEN:
    description: 'Token for private repositories'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Setting up DB mysql
      if: ${{ inputs.dbtype == 'mysqli' }}
      uses: johanmeiring/mysql-action@tmpfs-patch
      with:
        collation server: utf8mb4_danish_ci
        mysql version: 8
        mysql database: test
        mysql user: test
        mysql password: test
        use tmpfs: true

    - name: Setting up DB pgsql
      if: ${{ inputs.dbtype == 'pgsql' }}
      uses: m4nu56/postgresql-action@v1
      with:
        postgresql version: 16
        postgresql db: test
        postgresql user: test
        postgresql password: test

    - name: Setting up DB mssql
      if: ${{ inputs.dbtype == 'sqlsrv' }}
      uses: praxisdigital/setup-mssql-server@main
      with:
        version: 2022
        user: test
        password: test
        database: test

    - name: Setting up PHP ${{ matrix.php }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ inputs.php }}
        coverage: none
        ini-values: 'max_input_vars=5000'
        extensions: sqlsrv, pdo_sqlsrv

    - name: Download & Setup MSSQL ODBC driver for PHP
      if: ${{ inputs.dbtype == 'sqlsrv' }}
      shell: bash
      env:
        PHP_VERSION: ${{ inputs.php }}
      run: |
        sudo apt-get update
        sudo apt-get install -y unixodbc-dev
        sudo sh -c "printf \"; priority=20\nextension=sqlsrv.so\n\" > /etc/php/$PHP_VERSION/mods-available/sqlsrv.ini"
        sudo sh -c "printf \"; priority=30\nextension=pdo_sqlsrv.so\n\" > /etc/php/$PHP_VERSION/mods-available/pdo_sqlsrv.ini"
        sudo phpenmod sqlsrv pdo_sqlsrv
        php -m | grep -q 'sqlsrv' && echo "sqlsrv extension installed"
        php -v

    - name: Checking out code from moodle/moodle
      uses: actions/checkout@v4
      with:
        repository: moodle/moodle
        ref: ${{ inputs.moodle }}
        path: ${{ github.workspace }}/moodle

    - name: Setting up Moodle dataroot & config
      shell: bash
      env:
        dbtype: ${{ inputs.dbtype }}
      run: |
        echo "pathtophp=$(which php)" >> $GITHUB_ENV # Inject installed pathtophp to env. The template config needs it.
        touch $GITHUB_WORKSPACE/moodle/config.php
        mkdir -p $GITHUB_WORKSPACE/moodledata
        echo '<?php' >> $GITHUB_WORKSPACE/moodle/config.php
        echo 'unset($CFG);' >> $GITHUB_WORKSPACE/moodle/config.php
        echo 'global $CFG;' >> $GITHUB_WORKSPACE/moodle/config.php
        echo '$CFG = new stdClass();' >> $GITHUB_WORKSPACE/moodle/config.php
        echo "\$CFG->dbtype   = '$dbtype';" >> $GITHUB_WORKSPACE/moodle/config.php
        echo '$CFG->dblibrary = "native";' >> $GITHUB_WORKSPACE/moodle/config.php
        echo '$CFG->dbhost    = "127.0.0.1";' >> $GITHUB_WORKSPACE/moodle/config.php
        echo '$CFG->dbname    = "test";' >> $GITHUB_WORKSPACE/moodle/config.php
        echo '$CFG->dbuser    = "test";' >> $GITHUB_WORKSPACE/moodle/config.php
        echo '$CFG->dbpass    = "test";' >> $GITHUB_WORKSPACE/moodle/config.php
        echo '$CFG->prefix    = "m_";' >> $GITHUB_WORKSPACE/moodle/config.php
        echo '$CFG->dboptions = ["dbcollation" => "utf8mb4_unicode_ci"];' >> $GITHUB_WORKSPACE/moodle/config.php
        echo '$host = "localhost";' >> $GITHUB_WORKSPACE/moodle/config.php
        echo '$CFG->wwwroot   = "http://{$host}";' >> $GITHUB_WORKSPACE/moodle/config.php
        echo "\$CFG->dataroot  = '$GITHUB_WORKSPACE/moodledata';" >> $GITHUB_WORKSPACE/moodle/config.php
        echo '$CFG->admin     = "admin";' >> $GITHUB_WORKSPACE/moodle/config.php
        echo '$CFG->directorypermissions = 0777;' >> $GITHUB_WORKSPACE/moodle/config.php
        echo '$CFG->debug = (E_ALL);' >> $GITHUB_WORKSPACE/moodle/config.php
        echo '$CFG->debugdisplay = 1;' >> $GITHUB_WORKSPACE/moodle/config.php
        echo '$CFG->debugstringids = 1;' >> $GITHUB_WORKSPACE/moodle/config.php
        echo '$CFG->perfdebug = 15;' >> $GITHUB_WORKSPACE/moodle/config.php
        echo '$CFG->debugpageinfo = 1;' >> $GITHUB_WORKSPACE/moodle/config.php
        echo '$CFG->allowthemechangeonurl = 1;' >> $GITHUB_WORKSPACE/moodle/config.php
        echo '$CFG->passwordpolicy = 0;' >> $GITHUB_WORKSPACE/moodle/config.php
        echo '$CFG->cronclionly = 0;' >> $GITHUB_WORKSPACE/moodle/config.php
        echo '$CFG->pathtophp = getenv("pathtophp");' >> $GITHUB_WORKSPACE/moodle/config.php
        echo '$CFG->phpunit_dataroot  = realpath(dirname(__DIR__)) . "/phpunitdata";' >> $GITHUB_WORKSPACE/moodle/config.php
        echo '$CFG->phpunit_prefix = "t_";' >> $GITHUB_WORKSPACE/moodle/config.php
        echo 'define("TEST_EXTERNAL_FILES_HTTP_URL", "http://$host:8080");' >> $GITHUB_WORKSPACE/moodle/config.php
        echo 'define("TEST_EXTERNAL_FILES_HTTPS_URL", "http://$host:8080");' >> $GITHUB_WORKSPACE/moodle/config.php
        echo 'define("TEST_SESSION_REDIS_HOST", $host);' >> $GITHUB_WORKSPACE/moodle/config.php
        echo 'define("TEST_CACHESTORE_REDIS_TESTSERVERS", $host);' >> $GITHUB_WORKSPACE/moodle/config.php
        echo 'require_once(__DIR__ . "/lib/setup.php");' >> $GITHUB_WORKSPACE/moodle/config.php

    - name: Checking out dependencies
      if: ${{ inputs.dependencies != '' }}
      shell: bash
      run: |
        # dependencies are in the format of org/repo@ref
        dependencies="${{ inputs.dependencies }}"
        if [[ -z $dependencies ]]; then
          echo "No dependencies to checkout"
          exit 0
        fi
        for dep in $dependencies; do
          repo=$(echo $dep | cut -d@ -f1)
          ref=$(echo $dep | cut -d@ -f2)
          url="https://github.com/${repo}.git"

          # Convert to correct URL if private repo
          if [[ $repo == ${{ inputs.org }}/* ]]; then
            printf "Checking out ${repo}@${ref} from github.com\n"
            url="https://oauth2:${{ inputs.PRIVATE_REPO_TOKEN }}@github.com/${repo}.git"
          else
            printf "Checking out (public) ${repo}@${ref} from github.com\n"
          fi

          # Get component name from version.php by cloning to a temp dir
          echo "Auto determining component name for repo: $repo ..."
          tmpdir=$GITHUB_WORKSPACE/tmp
          mkdir -p $tmpdir
          git clone --quiet $url $tmpdir/$repo
          component=$(cat $tmpdir/$repo/version.php | sed -En 's/\s*\$plugin->component\s*=\s*(.*)\s*;/\1/p' | cut -d"'" -f2 | cut -d'"' -f2)
          rm -rf $tmpdir/$repo
          echo "Auto determined component name: $component"

          # Calculate the path to clone to inside moodle based on component name
          echo "Auto determining path for component: $component ..."
          path=$(php -r "CONST CLI_SCRIPT = true; require_once '$GITHUB_WORKSPACE/moodle/config.php'; require_once '$GITHUB_WORKSPACE/moodle/lib/classes/component.php'; class_exists('core\\component') === false && class_alias('core_component', '\\core\\component'); use core\\component; [\$plugin_type, \$name] = component::normalize_component('$component'); \$plugin_types = component::get_plugin_types();echo empty(\$plugin_types[\$plugin_type]) ? '' : \$plugin_types[\$plugin_type] . '/' . \$name;")
          echo "Auto determined path: $path"

          echo "Cloning $repo@$ref using $url to $path ..."
          git clone $url $path
          git -C $path checkout $ref
        done

    - name: Check out code from ${{ github.repository }}
      uses: actions/checkout@v4
      with:
        path: ${{ github.workspace }}/moodle/${{ inputs.plugin-path }}
        ref: ${{ github.ref }}

    - name: Setting up PHPUnit
      env:
        dbtype: ${{ inputs.dbtype }}
      shell: bash
      run: |
        echo "pathtophp=$(which php)" >> $GITHUB_ENV # Inject installed pathtophp to env. The template config needs it.
        mkdir $GITHUB_WORKSPACE/../moodledata
        sudo locale-gen en_AU.UTF-8
        php $GITHUB_WORKSPACE/moodle/admin/tool/phpunit/cli/init.php --no-composer-self-update

    - name: Running PHPUnit tests
      shell: bash
      env:
        dbtype: ${{ inputs.dbtype }}
        component: ${{ inputs.plugin }}
      run: $GITHUB_WORKSPACE/moodle/vendor/bin/phpunit -c $GITHUB_WORKSPACE/moodle/phpunit.xml --testsuite=${component}_testsuite -v --testdox --colors