name: Integration & Unit test

on:
  workflow_call:
    inputs:
      plugin:
        description: 'Plugin name (component name)'
        required: true
        type: string
      plugin-path:
        description: 'Plugin path'
        required: true
        type: string
      php:
        description: 'PHP version'
        required: true
        type: number
      moodle:
        description: 'Moodle version (branch, tag or commit)'
        required: true
        type: string
      os:
        description: 'Operating system'
        required: true
        type: string
      org:
        description: 'Organization'
        required: false
        type: string
        default: 'praxisdigital'
      dependencies:
        description: 'Dependencies. Comma separated list of org/repo:path@ref (e.g. praxisdigital/assignsubmission_pxaiwriter:mod/assign/submission/pxaiwriter@master,praxisdigital/mod_smartlink:mod/smartlink@MOODLE_42_STABLE)'
        required: false
        type: string
        default: ''
      dbtype:
        description: 'Database type (mysqli, pgsql, sqlsrv)'
        required: false
        type: string
        default: 'mysqli'
      experimental:
        description: 'Is experimental run'
        required: false
        type: boolean
        default: false
    secrets:
      PRIVATE_REPO_TOKEN:
        description: 'Token for private repositories'
        required: true

jobs:
  PHPUnit:
    name: "PHPUnit: ${{ inputs.plugin }}@${{ github.ref }} moodle@${{ inputs.moodle }}, php@${{ inputs.php }}, os: ${{ inputs.os }}"
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    env:
      dbname: test
      dbuser: test
      dbpass: test
      dbcollation: utf8mb4_unicode_ci
      #pathtophp: /usr/bin/php
    strategy:
      matrix:
        include:
          - os: ${{ inputs.os }}
            php: ${{ inputs.php }}
            db: ${{ inputs.dbtype }}
            moodle: ${{ inputs.moodle }}
            experimental: ${{ inputs.experimental }}
    steps:
      - name: Setting up PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
          ini-values: 'max_input_vars=5000'

      - name: Checking out code from moodle/moodle
        uses: actions/checkout@v4
        with:
          repository: moodle/moodle
          ref: ${{ inputs.moodle }}

      - name: Checking out dependencies
        if: ${{ inputs.dependencies != '' }}
        run: |
          # dependencies are in the format of org/repo:path@ref
          dependencies="${{ inputs.dependencies }}"
          for dep in $dependencies; do
            repo=$(echo $dep | cut -d: -f1)
            path=$(echo $dep | cut -d: -f2 | cut -d@ -f1)
            ref=$(echo $dep | cut -d@ -f2)
            url="https://github.com/${repo}.git"

            if [[ $repo == ${{ inputs.org }}/* ]]; then
              printf "Checking out ${repo}@${ref} to ${path}\n"
              url="https://oauth2:${{ secrets.PRIVATE_REPO_TOKEN }}@github.com/${repo}.git"
            else
              printf "Checking out (public) ${repo}@${ref} to ${path}\n"
            fi
            git clone --quiet $url $GITHUB_WORKSPACE/$path
          done
        
      - name: Check out code from ${{ github.repository }}
        uses: actions/checkout@v4
        with:
          path: ${{ github.workspace }}${{ inputs.plugin-path }}
          ref: ${{ github.ref }}

      - name: Setting up DB mysql
        if: ${{ inputs.dbtype == 'mysqli' }}
        uses: johanmeiring/mysql-action@tmpfs-patch
        with:
          collation server: utf8mb4_danish_ci
          mysql version: 9
          mysql database: ${{ env.dbname || 'test' }}
          mysql user: ${{ env.dbuser || 'test' }}
          mysql password: ${{ env.dbpass || 'test' }}
          use tmpfs: true

      - name: Setting up DB pgsql
        if: ${{ inputs.dbtype == 'pgsql' }}
        uses: m4nu56/postgresql-action@v1
        with:
          postgresql version: 16
          postgresql db: ${{ env.dbname || 'test' }}
          postgresql user: ${{ env.dbuser || 'test' }}
          postgresql password: ${{ env.dbpass || 'test' }}

      - name: Setting up DB mssql
        if: ${{ inputs.dbtype == 'sqlsrv' }}
        uses: praxisdigital/setup-mssql-server@dev
        with:
          version: 2022
          user: ${{ env.dbuser || 'test' }}
          password: ${{ env.dbpass || 'test' }}
          database: ${{ env.dbname || 'test' }}

      - name: Generate Moodle configuration
        env:
          dbtype: ${{ matrix.db }}
          dbname: ${{ env.dbname || 'test' }}
          dbuser: ${{ env.dbuser || 'test' }}
          dbpass: ${{ env.dbpass || 'test' }}
        run: |
          echo '<?php' >> $GITHUB_WORKSPACE/config.php
          echo 'class moodle_env {' >> $GITHUB_WORKSPACE/config.php
          echo '    public static function get_env(string $key, string $default = ""): string {' >> $GITHUB_WORKSPACE/config.php
          echo '        $value = getenv($key);' >> $GITHUB_WORKSPACE/config.php
          echo '        return empty($value) ? $default : $value;' >> $GITHUB_WORKSPACE/config.php
          echo '    }' >> $GITHUB_WORKSPACE/config.php
          echo '}' >> $GITHUB_WORKSPACE/config.php
          echo 'unset($CFG);' >> $GITHUB_WORKSPACE/config.php
          echo 'global $CFG;' >> $GITHUB_WORKSPACE/config.php
          echo '$CFG = new stdClass();' >> $GITHUB_WORKSPACE/config.php
          echo '$CFG->dbtype    = moodle_env::get_env("dbtype", "mysqli");' >> $GITHUB_WORKSPACE/config.php
          echo '$CFG->dblibrary = "native";' >> $GITHUB_WORKSPACE/config.php
          echo '$CFG->dbhost    = "127.0.0.1";' >> $GITHUB_WORKSPACE/config.php
          echo '$CFG->dbname    = moodle_env::get_env("dbname", "test");' >> $GITHUB_WORKSPACE/config.php
          echo '$CFG->dbuser    = moodle_env::get_env("dbuser", "test");' >> $GITHUB_WORKSPACE/config.php
          echo '$CFG->dbpass    = moodle_env::get_env("dbpass", "test");' >> $GITHUB_WORKSPACE/config.php
          echo '$CFG->prefix    = "m_";' >> $GITHUB_WORKSPACE/config.php
          echo '$CFG->dboptions = ["dbcollation" => moodle_env::get_env("dbcollation", "utf8mb4_unicode_ci")];' >> $GITHUB_WORKSPACE/config.php
          echo '$host = "localhost";' >> $GITHUB_WORKSPACE/config.php
          echo '$CFG->wwwroot   = "http://{$host}";' >> $GITHUB_WORKSPACE/config.php
          echo '$CFG->dataroot  = realpath(dirname(__DIR__)) . "/moodledata";' >> $GITHUB_WORKSPACE/config.php
          echo '$CFG->admin     = "admin";' >> $GITHUB_WORKSPACE/config.php
          echo '$CFG->directorypermissions = 0777;' >> $GITHUB_WORKSPACE/config.php
          echo '$CFG->debug = (E_ALL | E_STRICT);' >> $GITHUB_WORKSPACE/config.php
          echo '$CFG->debugdisplay = 1;' >> $GITHUB_WORKSPACE/config.php
          echo '$CFG->debugstringids = 1;' >> $GITHUB_WORKSPACE/config.php
          echo '$CFG->perfdebug = 15;' >> $GITHUB_WORKSPACE/config.php
          echo '$CFG->debugpageinfo = 1;' >> $GITHUB_WORKSPACE/config.php
          echo '$CFG->allowthemechangeonurl = 1;' >> $GITHUB_WORKSPACE/config.php
          echo '$CFG->passwordpolicy = 0;' >> $GITHUB_WORKSPACE/config.php
          echo '$CFG->cronclionly = 0;' >> $GITHUB_WORKSPACE/config.php
          echo '$CFG->pathtophp = moodle_env::get_env("pathtophp");' >> $GITHUB_WORKSPACE/config.php
          echo '$CFG->phpunit_dataroot  = realpath(dirname(__DIR__)) . "/phpunitdata";' >> $GITHUB_WORKSPACE/config.php
          echo '$CFG->phpunit_prefix = "t_";' >> $GITHUB_WORKSPACE/config.php
          echo 'define("TEST_EXTERNAL_FILES_HTTP_URL", "http://$host:8080");' >> $GITHUB_WORKSPACE/config.php
          echo 'define("TEST_EXTERNAL_FILES_HTTPS_URL", "http://$host:8080");' >> $GITHUB_WORKSPACE/config.php
          echo 'define("TEST_SESSION_REDIS_HOST", $host);' >> $GITHUB_WORKSPACE/config.php
          echo 'define("TEST_CACHESTORE_REDIS_TESTSERVERS", $host);' >> $GITHUB_WORKSPACE/config.php
          echo 'require_once(__DIR__ . "/lib/setup.php");' >> $GITHUB_WORKSPACE/config.php

      - name: Setting up PHPUnit
        env:
          dbtype: ${{ matrix.db }}
        run: |
          echo "pathtophp=$(which php)" >> $GITHUB_ENV # Inject installed pathtophp to env. The template config needs it.
          mkdir $GITHUB_WORKSPACE/../moodledata
          sudo locale-gen en_AU.UTF-8
          php $GITHUB_WORKSPACE/admin/tool/phpunit/cli/init.php --no-composer-self-update

      - name: Running PHPUnit tests
        env:
          dbtype: ${{ matrix.db }}
          component: ${{ inputs.plugin }}
        run: $GITHUB_WORKSPACE/vendor/bin/phpunit -c $GITHUB_WORKSPACE/phpunit.xml --testsuite=${component}_testsuite -v --testdox --colors
