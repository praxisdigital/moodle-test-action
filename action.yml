name: moodle-test-action
description: 'Run PHPUnit tests for Moodle'

inputs:
  php:
    description: >
      PHP version
    required: false
    default: '8.2'
  db:
    description: >
      Database type
    required: false
    default: 'mysqli'
  moodle:
    description: >
      Moodle commit, branch or tag
    required: false
    default: 'MOODLE_404_STABLE'
  moodle_repo:
    description: >
      Moodle repository
    required: false
    default: 'moodle/moodle'
  os:
    description: >
      Operating system
    required: false
    default: 'ubuntu-latest'
  owner:
    description: >
      Repository owner (organization or user)
    required: false
    default: ${{ github.repository_owner }}
  dependencies:
    description: >
      Plugin dependencies. You can specify multiple dependencies.
      You can also use the environment variable DEPENDENCIES.
      Format: 'repo@ref' or 'owner/repo@ref'
      Example: |
        praxisdigital/assignsubmission_pxaiwriter@master
        mod_smartlink@MOODLE_42_STABLE
    required: false
    default: ''
  experimental:
    description: >
      Is experimental run
    required: false
    default: false
  dbname:
    description: >
      Database name
    required: false
    default: 'test'
  dbuser:
    description: >
      Database user
    required: false
    default: 'test'
  dbpass:
    description: >
      Database password
    required: false
    default: 'test'
  token:
    description: >
      Token for private repositories
    required: false
    default: ${{ github.token }}

runs:
  using: 'composite'
  env:
    MOODLE_DIR: ${{ github.workspace }}/moodle
  steps:
    uses: actions/checkout@v4
    - name: Setting up PHP ${{ inputs.php }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ inputs.php }}
        coverage: none
        ini-values: 'max_input_vars=5000'

    - name: Checkout ${{ inputs.moodle_repo }}
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.moodle_repo }}
        ref: ${{ inputs.moodle }}
        path: ${{ env.MOODLE_DIR }}
    
    - name: Setting up Moodle config
      shell: bash
      env:
        MOODLE_DIR: ${{ github.workspace }}/moodle
      run: |
        moodle_dir=$MOODLE_DIR
        echo '<?php' > $moodle_dir/config.php
        echo 'class moodle_env {' >> $moodle_dir/config.php
        echo '    public static function get_env(string $key, string $default = ""): string {' >> $moodle_dir/config.php
        echo '        $value = getenv($key);' >> $moodle_dir/config.php
        echo '        return empty($value) ? $default : $value;' >> $moodle_dir/config.php
        echo '    }' >> $moodle_dir/config.php
        echo '}' >> $moodle_dir/config.php
        echo 'unset($CFG);' >> $moodle_dir/config.php
        echo 'global $CFG;' >> $moodle_dir/config.php
        echo '$CFG = new stdClass();' >> $moodle_dir/config.php
        echo '$CFG->dbtype    = moodle_env::get_env("dbtype", "mysqli");' >> $moodle_dir/config.php
        echo '$CFG->dblibrary = "native";' >> $moodle_dir/config.php
        echo '$CFG->dbhost    = "127.0.0.1";' >> $moodle_dir/config.php
        echo '$CFG->dbname    = moodle_env::get_env("dbname", "test");' >> $moodle_dir/config.php
        echo '$CFG->dbuser    = moodle_env::get_env("dbuser", "test");' >> $moodle_dir/config.php
        echo '$CFG->dbpass    = moodle_env::get_env("dbpass", "test");' >> $moodle_dir/config.php
        echo '$CFG->prefix    = "m_";' >> $moodle_dir/config.php
        echo '$CFG->dboptions = ["dbcollation" => moodle_env::get_env("dbcollation", "utf8mb4_unicode_ci")];' >> $moodle_dir/config.php
        echo '$host = "localhost";' >> $moodle_dir/config.php
        echo '$CFG->wwwroot   = "http://{$host}";' >> $moodle_dir/config.php
        echo '$CFG->dataroot  = realpath(dirname(__DIR__)) . "/moodledata";' >> $moodle_dir/config.php
        echo '$CFG->admin     = "admin";' >> $moodle_dir/config.php
        echo '$CFG->directorypermissions = 0777;' >> $moodle_dir/config.php
        echo '$CFG->debug = (E_ALL | E_STRICT);' >> $moodle_dir/config.php
        echo '$CFG->debugdisplay = 1;' >> $moodle_dir/config.php
        echo '$CFG->debugstringids = 1;' >> $moodle_dir/config.php
        echo '$CFG->perfdebug = 15;' >> $moodle_dir/config.php
        echo '$CFG->debugpageinfo = 1;' >> $moodle_dir/config.php
        echo '$CFG->allowthemechangeonurl = 1;' >> $moodle_dir/config.php
        echo '$CFG->passwordpolicy = 0;' >> $moodle_dir/config.php
        echo '$CFG->cronclionly = 0;' >> $moodle_dir/config.php
        echo '$CFG->pathtophp = moodle_env::get_env("pathtophp");' >> $moodle_dir/config.php
        echo '$CFG->phpunit_dataroot  = realpath(dirname(__DIR__)) . "/phpunitdata";' >> $moodle_dir/config.php
        echo '$CFG->phpunit_prefix = "t_";' >> $moodle_dir/config.php
        echo 'define("TEST_EXTERNAL_FILES_HTTP_URL", "http://$host:8080");' >> $moodle_dir/config.php
        echo 'define("TEST_EXTERNAL_FILES_HTTPS_URL", "http://$host:8080");' >> $moodle_dir/config.php
        echo 'define("TEST_SESSION_REDIS_HOST", $host);' >> $moodle_dir/config.php
        echo 'define("TEST_CACHESTORE_REDIS_TESTSERVERS", $host);' >> $moodle_dir/config.php
        echo 'require_once(__DIR__ . "/lib/setup.php");' >> $moodle_dir/config.php
        printf "Moodle has been configured\n"
    
    - name: Prepare dependencies
      if: ${{ inputs.dependencies }} != ''
      shell: bash
      run: |
        # Convert dependencies lines to array in JSON
        depencencies="${{ inputs.dependencies }}"
        plugins=''
        for plugin in $depencencies; do
          plugins="$plugins\"$plugin\","
        done

        if [ -z "$plugins" ]; then
          echo "Unable to convert dependencies into JSON. Check if the format is correct."
          exit 1
        fi

        # Remove trailing comma
        plugins="${plugins%,}"

        # Set dependencies
        echo "DEPENDENCIES=$plugins" >> $GITHUB_ENV

    - name: Checking out dependencies
      uses: praxisdigital/moodle-test-action/.github/workflows/checkout-dependencies.yml@test
      if: ${{ env.DEPENDENCIES }} != ''
      with:
        dependencies: ${{ toJson(env.DEPENDENCIES) }}
        moodle_dir: ${{ env.MOODLE_DIR }}

    - name: Checkout ${{ github.repository }}
      uses: praxisdigital/moodle-plugin-checkout@dev
      with:
        repo: ${{ github.repository }}
        ref: ${{ github.ref }}
        moodle_dir: ${{ env.MOODLE_DIR }}

    - name: Setting up DB mysql
      if: ${{ matrix.db == 'mysqli' }}
      uses: johanmeiring/mysql-action@tmpfs-patch
      with:
        collation server: utf8mb4_danish_ci
        mysql version: 8
        mysql database: ${{ inputs.dbname }}
        mysql user: ${{ inputs.dbuser }}
        mysql password: ${{ inputs.dbpass }}
        use tmpfs: true

    - name: Setting up DB pgsql
      if: ${{ matrix.db == 'pgsql' }}
      uses: m4nu56/postgresql-action@v1
      with:
        postgresql version: 16
        postgresql db: ${{ inputs.dbname }}
        postgresql user: ${{ inputs.dbuser }}
        postgresql password: ${{ inputs.dbpass }}

    - name: Setting up DB mssql
      if: ${{ matrix.db == 'sqlsrv' }}
      uses: praxisdigital/setup-mssql-server@dev
      with:
        version: 2019
        user: ${{ inputs.dbuser }}
        password: ${{ inputs.dbpass }}
        database: ${{ inputs.dbname }}

    - name: Configure Moodle & database
      shell: bash
      env:
        dbtype: ${{ matrix.db }}
      run: |
        echo "pathtophp=$(which php)" >> $GITHUB_ENV
        mkdir $MOODLE_DIR/../moodledata
        sudo locale-gen en_AU.UTF-8
        php $MOODLE_DIR/admin/tool/phpunit/cli/init.php --no-composer-self-update

    - name: Running PHPUnit tests
      shell: bash
      env:
        dbtype: ${{ matrix.db }}
        component: ${{ inputs.plugin }}
      run: $MOODLE_DIR/vendor/bin/phpunit -c $MOODLE_DIR/phpunit.xml --testsuite=${component}_testsuite -v --testdox --colors